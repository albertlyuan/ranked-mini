type Player @model @auth(rules: [{allow: public}]) {
  id: ID!
  elo: Float
  wins: Int
  losses: Int
  leagueID: ID! @index(name: "byLeague")
  displayName: String
  PlayerHistories: [PlayerHistory] @hasMany(indexName: "byPlayer", fields: ["id"])
}

type Game @model @auth(rules: [{allow: public}]) {
  id: ID!
  timestamp: AWSDateTime
  loser1: String
  loser2: String
  loser3: String
  winner1: String
  winner2: String
  winner3: String
  winnerPulled: Boolean
  leagueID: ID! @index(name: "byLeague")
  PlayerHistories: [PlayerHistory] @hasMany(indexName: "byGame", fields: ["id"])
}

type PlayerHistory @model @auth(rules: [{allow: public}]) {
  id: ID!
  elo: Float
  wins: Int
  losses: Int
  timestamp: AWSDateTime
  playerID: ID! @index(name: "byPlayer")
  gameID: ID! @index(name: "byGame")
}

type League @model @auth(rules: [{allow: public}]) {
  id: ID!
  players: [Player] @hasMany(indexName: "byLeague", fields: ["id"])
  games: [Game] @hasMany(indexName: "byLeague", fields: ["id"])
  leagueName: String
  adminUID: String
}
 